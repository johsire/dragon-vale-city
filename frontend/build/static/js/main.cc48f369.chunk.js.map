{"version":3,"sources":["actions/types.js","reducers/fetchStates.js","reducers/generation.js","reducers/dragon.js","reducers/account.js","reducers/accountDragons.js","reducers/accountInfo.js","reducers/publicDragons.js","reducers/index.js","history.js","components/DragonAvatar.js","config.js","components/Dragon.js","actions/dragon.js","components/Generation.js","actions/generation.js","actions/account.js","components/AccountInfo.js","actions/accountInfo.js","components/styles/HomeStyles.js","components/Home.js","components/styles/AuthFormStyles.js","components/AuthForm.js","components/Root.js","actions/accountDragons.js","components/AccountDragonRow.js","components/styles/AcctDragonStyles.js","components/AccountDragons.js","actions/publicDragons.js","components/MationgOptions.js","components/PublicDragonRow.js","components/styles/PubDragonStyles.js","components/PublicDragons.js","index.js","assets/skinny.png","assets/slender.png","assets/sporty.png","assets/stocky.png","assets/patchy.png","assets/plain.png","assets/spotted.png","assets/striped.png","assets/homepage-bg.jpg","assets/bg-wrapper.jpg","assets/lounge2-bg.jpg","assets/economy-bg.jpg"],"names":["GENERATION","DRAGON","ACCOUNT","ACCOUNT_DRAGONS","ACCOUNT_INFO","PUBLIC_DRAGONS","fetchStates","DEFAULT_GENERATION","generationId","expiration","generationReducer","state","arguments","length","undefined","action","type","Object","objectSpread","status","message","generation","DEFAULT_DRAGON","dragonId","nickname","birthdate","traits","dragon","DEFAULT_ACCOUNT","loggedIn","account","authenticated","DEFAULT_ACCOUNT_DRAGONS","dragons","accountDragons","accountInfo","info","DEFAULT_PUBLIC_DRAGONS","publicDragons","combineReducers","createBrowserHistory","propertyMap","backgroundColor","black","white","green","blue","build","slender","stocky","sporty","skinny","pattern","plain","striped","spotted","patchy","size","small","medium","large","enormous","DragonAvatar","_this$props$dragon","this","props","react_default","a","createElement","map","trait","traitValue","join","DragonImage","dragonPropertyMap","forEach","traitType","sizing","width","height","className","style","src","Component","BACKEND","ADDRESS","process","BACKEND_ADDRESS","Dragon","Button","onClick","fetchDragon","DragonView","components_DragonAvatar","connect","_ref","dispatch","fetch","concat","credentials","then","response","json","catch","error","MINIMUM_DELAY","Generation","timer","fetchNextGeneration","_this","fetchGeneration","delay","Date","getTime","setTimeout","clearTimeout","console","log","toString","componentConnector","fetchFromAccount","endpoint","options","FETCH_TYPE","ERROR_TYPE","SUCCESS_TYPE","logout","AccountInfo","fetchAccountInfo","username","balance","Container","styled","div","_templateObject","BackgroundImage","TextWrapper","_templateObject2","Home","Link","to","components_AccountInfo","components_Generation","components_Dragon","AuthFormStyles_templateObject","FormWrapper","AuthFormStyles_templateObject2","AuthForm","password","buttonClicked","updateUsername","event","setState","target","value","updatePassword","signup","_this$state","login","_this$state2","AuthFormStyles_Container","FormGroup","FormControl","placeholder","onChange","Error","_ref2","method","body","JSON","stringify","headers","Content-Type","_ref3","Root","components_Home","components_AuthForm","fetchAccountDragons","AccountDragonRow","isPublic","saleValue","sireValue","edit","updateNickname","updateSaleValue","updateSireValue","updateIsPublic","checked","toogleEdit","save","alert","disabled","SaveButton","EditButton","AcctDragonStyles_templateObject","AcctDragonStyles_templateObject2","AccountDragons","AcctDragonStyles_Container","AcctDragonStyles_TextWrapper","key","components_AccountDragonRow","fetchPublicDragons","MatingOptions","mate","matronDragonId","patronDragonId","history","push","_this2","PublicDragonRow","displayMatingOptions","toogleDisplayMatingOptions","buy","MationgOptions","PubDragonStyles_templateObject","PubDragonStyles_templateObject2","PublicDragons","PubDragonStyles_Container","PubDragonStyles_TextWrapper","components_PublicDragonRow","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","AuthRoute","getState","Redirect","pathname","component","path","Route","render","es","Router","Switch","exact","src_AuthRoute","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.cc48f369.chunk.js","sourcesContent":["\n const GENERATION = {\n  FETCH:         'GENERATION_FETCH',\n  FETCH_ERROR:   'GENERATION_FETCH_ERROR',\n  FETCH_SUCCESS: 'GENERATION_FETCH_SUCCESS'\n};\n\n const DRAGON = {\n  FETCH:         'DRAGON_FETCH',\n  FETCH_ERROR:   'DRAGON_FETCH_ERROR',\n  FETCH_SUCCESS: 'DRAGON_FETCH_SUCCESS'\n};\n\nconst ACCOUNT = {\n  FETCH: 'ACCOUNT_FETCH',\n  FETCH_ERROR: 'ACCOUNT_FETCH_ERROR',\n  FETCH_SUCCESS: 'ACCOUNT_FETCH_SUCCESS',\n  FETCH_LOGOUT_SUCCESS: 'ACCOUNT_FETCH_LOGOUT_SUCCESS',\n  FETCH_AUTHENTICATED_SUCCESS: 'ACCOUNT_FETCH_AUTHENTICATED_SUCCESS'\n};\n\nconst ACCOUNT_DRAGONS = {\n  FETCH: 'ACCOUNT_DRAGON_FETCH',\n  FETCH_ERROR: 'ACCOUNT__DRAGON_FETCH_ERROR',\n  FETCH_SUCCESS: 'ACCOUNT__DRAGON_FETCH_SUCCESS',\n};\n\nconst ACCOUNT_INFO = {\n  FETCH: 'ACCOUNT__INFO_ FETCH',\n  FETCH_ERROR: 'ACCOUNT__INFO_ FETCH_ERROR',\n  FETCH_SUCCESS: 'ACCOUNT__INFO_ FETCH_SUCCESS',\n};\n\nconst PUBLIC_DRAGONS = {\n  FETCH: 'PUBLIC_DRAGONS_FETCH',\n  FETCH_ERROR: 'PUBLIC_DRAGONS_FETCH_ERROR',\n  FETCH_SUCCESS: 'PUBLIC_DRAGONS_FETCH_SUCCESS'\n};\n\nexport {\n  GENERATION,\n  DRAGON,\n  ACCOUNT,\n  ACCOUNT_DRAGONS,\n  ACCOUNT_INFO,\n  PUBLIC_DRAGONS\n};\n","\nexport default {\n fetching: 'fetching',\n error: 'error',\n success: 'success'\n};\n","\nimport { GENERATION } from '../actions/types';\nimport fetchStates from './fetchStates';\n\nconst DEFAULT_GENERATION = { generationId: '', expiration: '' }\n\nconst generationReducer = (state = DEFAULT_GENERATION, action) => {\n switch(action.type) {\n  case GENERATION.FETCH:\n   return { ...state, status: fetchStates.fetching };\n\n  case GENERATION.FETCH_ERROR:\n   return { ...state, status: fetchStates.error, message: action.message }\n\n  case GENERATION.FETCH_SUCCESS:\n   return { ...state, status: fetchStates.success, ...action.generation };\n\n  default:\n   return state; \n  }\n};\n\nexport default generationReducer;\n","\nimport { DRAGON } from '../actions/types';\nimport fetchStates from './fetchStates';\n\nconst DEFAULT_DRAGON = {\n  generationId: '',\n  dragonId: '',\n  nickname: '',\n  birthdate: '',\n  traits: []\n};\n\nconst dragon = (state = DEFAULT_DRAGON, action) => {\n  switch(action.type) {\n   case DRAGON.FETCH:\n    return { ...state, status: fetchStates.fetching };\n\n  case DRAGON.FETCH_ERROR:\n   return { ...state, status: fetchStates.error, message: action.message }\n   \n  case DRAGON.FETCH_SUCCESS:\n   return { ...state, status: fetchStates.success, ...action.dragon }\n\n  default:\n   return state; \n  };\n};\n\nexport default dragon;\n","\nimport { ACCOUNT } from '../actions/types';\nimport fetchStates from './fetchStates';\n\nconst DEFAULT_ACCOUNT = { loggedIn: false };\n\nconst account = (state = DEFAULT_ACCOUNT, action) => {\n  switch(action.type) {\n    case ACCOUNT.FETCH:\n      return { ...state, status: fetchStates.fetching };\n\n    case ACCOUNT.FETCH_ERROR:\n      return { ...state, status: fetchStates.error, message: action.message }\n\n    case ACCOUNT.FETCH_SUCCESS:\n      return { \n       ...state, \n       status: fetchStates.success,\n       message: action.message, \n       loggedIn: true \n     };\n\n     case ACCOUNT.FETCH_LOGOUT_SUCCESS:\n     return {\n       ...state,\n       status: fetchStates.success,\n       message: action.message,\n       loggedIn: false\n     };\n     \n     case ACCOUNT.FETCH_AUTHENTICATED_SUCCESS:\n     return {\n       ...state,\n       status: fetchStates.success,\n       message: action.message,\n       loggedIn: action.authenticated\n     };\n  \n    default:\n     return state;\n  };\n};\n\nexport default account;\n","import { ACCOUNT_DRAGONS } from '../actions/types';\nimport fetchStates from './fetchStates';\n\nconst DEFAULT_ACCOUNT_DRAGONS = { dragons: [] };\n\nconst accountDragons = (state = DEFAULT_ACCOUNT_DRAGONS, action) => {\n  switch(action.type) {\n\n    case ACCOUNT_DRAGONS.FETCH:\n      return { ...state, status: fetchStates.fetching\n      };\n\n    case ACCOUNT_DRAGONS.FETCH_ERROR:\n      return { ...state, status: fetchStates.error, message: action.message\n      };\n\n    case ACCOUNT_DRAGONS.FETCH_SUCCESS:\n      return {\n        ...state,\n        status: fetchStates.success,\n        message: action.message,\n        dragons: action.dragons\n      };\n\n    default:\n      return state;\n  };\n};\n\nexport default accountDragons;\n","\nimport { ACCOUNT_INFO } from '../actions/types';\nimport fetchStates from './fetchStates';\n\nconst accountInfo = (state = {}, action) => {\n switch (action.type){\n  case ACCOUNT_INFO.FETCH:\n   return { ...state, status: fetchStates.fetching\n   };\n  case ACCOUNT_INFO.FETCH_ERROR:\n   return { ...state, status: fetchStates.error, message: action.message\n   };\n  case ACCOUNT_INFO.FETCH_SUCCESS:\n   return {\n    ...state,\n    status: fetchStates.success,\n    message: action.message,\n    ...action.info\n   };\n  default:\n   return state;\n };\n};\n\nexport default accountInfo;\n","\n// Component imports\nimport { PUBLIC_DRAGONS } from '../actions/types';\nimport fetchStates from './fetchStates';\n\nconst DEFAULT_PUBLIC_DRAGONS = { dragons: [] };\n\nconst publicDragons = (state = DEFAULT_PUBLIC_DRAGONS, action) => {\n  switch(action.type) {\n\n    case PUBLIC_DRAGONS.FETCH:\n      return { ...state, status: fetchStates.fetching\n      };\n    case PUBLIC_DRAGONS.FETCH_ERROR:\n      return { ...state, status: fetchStates.error, message: action.message\n      };\n    case PUBLIC_DRAGONS.FETCH_SUCCESS:\n      return { ...state, status: fetchStates.success, dragons: action.dragons\n      };\n    default:\n      return state;\n  }\n};\n\nexport default publicDragons;\n","\nimport { combineReducers } from 'redux';\nimport generation from './generation';\nimport dragon from './dragon';\nimport account from './account';\nimport accountDragons from './accountDragons';\nimport accountInfo from './accountInfo';\nimport publicDragons from './publicDragons';\n\nexport default combineReducers({\n account,\n dragon,\n generation,\n accountDragons,\n accountInfo,\n publicDragons\n});\n","\n// turn our history Object into a module\nimport createBrowserHistory from 'history/createBrowserHistory';\n\nexport default createBrowserHistory();\n","import React, { Component } from 'react';\nimport { skinny, slender, sporty, stocky, patchy, plain, spotted, striped } from '../assets';\n\nconst propertyMap = {\n  backgroundColor: {\n    black: '#263238',\n    white: '#cfd8dc',\n    green: '#a5d6a7',\n    blue: '#0277bd'\n  },\n  build: { slender, stocky, sporty, skinny },\n  pattern: { plain, striped, spotted, patchy },\n  size: { \n    small: 100, \n    medium: 140, \n    large: 180, \n    enormous: 220 }\n};\n\nclass DragonAvatar extends Component {\n  get DragonImage() {\n    const dragonPropertyMap = {};\n\n    this.props.dragon.traits.forEach(trait => {\n      const { traitType, traitValue } = trait;\n\n      dragonPropertyMap[traitType] = propertyMap[traitType][traitValue];\n    });\n\n    const { backgroundColor, build, pattern, size } = dragonPropertyMap;\n\n    const sizing = { width: size, height: size };\n\n    return (\n      <div className='dragon-avatar-image-wrapper'>\n        <div className='dragon-avatar-image-background' style={{ backgroundColor, ...sizing }}></div>\n        <img src={pattern} className='dragon-avatar-image-pattern' style={{ ...sizing }} />\n        <img src={build} className='dragon-avatar-image' style={{ ...sizing }} />\n      </div>\n    );\n  };\n\n  render() {\n    const { generationId, dragonId, traits } = this.props.dragon;\n\n    if (!dragonId) return <div></div>;\n\n    return (\n      <div>\n        <span>GEN# { generationId }. </span>\n        <span>ID# { dragonId }. </span>\n        { traits.map(trait => trait.traitValue).join(',  ') }\n        { this.DragonImage }\n      </div>\n    )\n  }\n}\n\nexport default DragonAvatar;\n","\n\nconst BACKEND = {\n ADDRESS: process.env.BACKEND_ADDRESS\n};\n\nexport { BACKEND };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport DragonAvatar from './DragonAvatar';\nimport { fetchDragon } from '../actions/dragon';\nimport fetchStates from '../reducers/fetchStates';\n\nclass Dragon extends Component {\n  get DragonView() {\n    if (this.props.dragon.status === fetchStates.error) {\n      return <span>{this.props.dragon.message}</span>\n    }\n\n    return <DragonAvatar dragon={this.props.dragon} />\n  }\n\n  render() {\n    return (\n      <div>\n        <br />\n        <Button onClick={ this.props.fetchDragon }>New Dragon</Button>\n        <br />\n        { this.DragonView }\n        <br />\n        <br />\n      </div>\n    );\n  }\n};\n\nexport default connect(\n  ({ dragon }) => ({ dragon }),\n  { fetchDragon }\n)(Dragon);\n","\nimport { DRAGON } from './types';\nimport { BACKEND } from '../config';\n\nexport const fetchDragon = () => dispatch => {\n dispatch({ type: DRAGON.FETCH });\n\n return fetch(`${ BACKEND.ADDRESS }/dragon/new`, {\n   credentials: 'include'\n }).then(response => response.json())\n   .then(json => {\n     if (json.type === 'error') {\n      dispatch({ type: DRAGON.FETCH_ERROR, message: json.message })\n     } else {\n      dispatch({ type: DRAGON.FETCH_SUCCESS, dragon: json.dragon })\n     }\n   })\n   .catch(error => dispatch({ type: DRAGON.FETCH_ERROR, message: error.message }))\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchGeneration } from '../actions/generation';\nimport fetchStates from '../reducers/fetchStates';\n\nconst MINIMUM_DELAY = 3000;\n\nclass Generation extends Component {\n // we don't need to call constructor & super to initialize state:\n    timer = null;\n\n    // this ensures we kick off the loop by calling the next gen -\n    //  which  in turn calls the 1st new gen then from there on its -\n    // recarryingly calling itself everytime a new gen is created:\n    componentDidMount() {\n      this.fetchNextGeneration();\n    };\n\n    // the opposite of compDidMount (unmounts n comp n clears it) so when the-\n    // user leaves this page the dragons gen creation loop engine stops as well:\n    componentWillUnmount() {\n      clearTimeout(this.timer);\n    };\n\n     fetchNextGeneration = () => {\n        this.props.fetchGeneration();\n\n        let delay = new Date(this.props.generation.expiration).getTime() - new Date().getTime();\n\n        if (delay < MINIMUM_DELAY) {\n          delay = MINIMUM_DELAY;\n        };\n\n        this.timer = setTimeout(() => this.fetchNextGeneration(), delay);\n     };\n\n  render() {\n   console.log('this.props', this.props)\n\n   const { generation } = this.props;\n   // const generation = this.state.generation: this is the same as the line above ****<<<===| Clean code alert****\n\n  //  if (generation.status === fetchStates.fetching) {\n  //    return <div>...</div>\n  //  }\n\n   if (generation.status === fetchStates.error) {\n     return <div>{ generation.message} </div>\n   }\n\n    return (\n      <div>\n       <h3>Generation { generation.generationId }. Expires on:</h3>\n       <h4>{new Date(generation.expiration).toString()}</h4>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = state => {\n  const generation = state.generation\n\n  return { generation };\n};\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchGeneration: () => fetchGeneration(dispatch)\n//   }\n// };\n\nconst componentConnector = connect(\n  mapStateToProps, \n  { fetchGeneration }\n);\n\n// the connect fn takes in the class comp as a parameter;\n// we connect the component w/ the connect fn &\n//  return a component mixed with redux store state:\nexport default componentConnector(Generation);\n","\nimport { GENERATION } from './types';\nimport { BACKEND } from '../config';\n\n// Action Creator is wrapped around the ACTION -\n// its returning it in itself BUT its not the action creator itself.\n// export const generationActionCreator = (payload) => {\n//     return {\n//       type: GENERATION_ACTION_TYPE,\n//       generation: payload\n//     }\n//   };\n\nexport const fetchGeneration = () => dispatch => {\n  dispatch({ type: GENERATION.FETCH });\n\n  return fetch(`${ BACKEND.ADDRESS }/generation`)\n    .then(response => response.json())\n    .then(json => {\n      if(json.type === 'error') {\n        dispatch({\n          type: GENERATION.FETCH_ERROR,\n          message: json.message\n        });\n      } else {\n      dispatch({ \n        type: GENERATION.FETCH_SUCCESS,\n        generation: json.generation\n        });\n      }  \n    })\n    .catch(error => dispatch({ \n      type: GENERATION.FETCH_ERROR,\n      message: error.message\n   }));\n};\n","\nimport { ACCOUNT } from './types';\nimport { BACKEND } from '../config';\n\nexport const fetchFromAccount = ({\n  endpoint,\n  options,\n  FETCH_TYPE,\n  ERROR_TYPE,\n  SUCCESS_TYPE\n}) => dispatch => {\n  dispatch({ type: FETCH_TYPE });\n\n  return fetch(`${ BACKEND.ADDRESS }/account/${ endpoint }`, options)\n    .then(response => response.json())\n    .then(json => {\n      if (json.type === 'error') {\n        dispatch({ type: ERROR_TYPE, message: json.message })\n      } else {\n        dispatch({ type: SUCCESS_TYPE, ...json })\n      }\n    })\n    .catch(error => dispatch({\n      type: ERROR_TYPE, message: error.message\n    }));\n};\n\nexport const signup = ({ username, password }) => fetchFromAccount({\n  endpoint: 'signup',\n  options: {\n    method: 'POST',\n    body: JSON.stringify({ username, password }),\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include'\n  },\n  FETCH_TYPE: ACCOUNT.FETCH,\n  ERROR_TYPE: ACCOUNT.FETCH_ERROR,\n  SUCCESS_TYPE: ACCOUNT.FETCH_SUCCESS\n});\n\nexport const login = ({ username, password }) => fetchFromAccount({\n  endpoint: 'login',\n  options: {\n    method: 'POST',\n    body: JSON.stringify({ username, password }),\n    headers: { 'Content-Type': 'application/json' },\n    credentials: 'include'\n  },\n  SUCCESS_TYPE: ACCOUNT.FETCH_SUCCESS,\n  FETCH_TYPE: ACCOUNT.FETCH,\n  ERROR_TYPE: ACCOUNT.FETCH_ERROR,\n});\n\nexport const logout = () => fetchFromAccount({\n  endpoint: 'logout',\n  options: { credentials: 'include' },\n  FETCH_TYPE: ACCOUNT.FETCH,\n  ERROR_TYPE: ACCOUNT.FETCH_ERROR,\n  SUCCESS_TYPE: ACCOUNT.FETCH_LOGOUT_SUCCESS\n});\n\nexport const fetchAuthenticated = () => fetchFromAccount({\n  endpoint: 'authenticated',\n  options: { credentials: 'include' },\n  FETCH_TYPE: ACCOUNT.FETCH,\n  ERROR_TYPE: ACCOUNT.FETCH_ERROR,\n  SUCCESS_TYPE: ACCOUNT.FETCH_AUTHENTICATED_SUCCESS\n});\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchAccountInfo } from  '../actions/accountInfo';\n\nclass AccountInfo extends Component {\n componentDidMount(){\n  this.props.fetchAccountInfo();\n }\n\n render() {\n  return (\n   <div className=\"acct-info\">\n     <h4>Account Info</h4>\n     Username: {this.props.accountInfo.username}\n     <br />\n     Balance: {this.props.accountInfo.balance}\n   </div>\n  )\n }\n};\n\nexport default connect(\n ({ accountInfo }) => ({ accountInfo }),\n { fetchAccountInfo }\n)(AccountInfo);\n","\nimport { fetchFromAccount } from './account';\nimport { ACCOUNT_INFO } from './types';\n\n export const fetchAccountInfo = () => fetchFromAccount({\n  endpoint: 'info',\n  options: { credentials: 'include' },\n  FETCH_TYPE: ACCOUNT_INFO.FETCH,\n  ERROR_TYPE: ACCOUNT_INFO.FETCH_ERROR,\n  SUCCESS_TYPE: ACCOUNT_INFO.FETCH_SUCCESS\n });\n ","\nimport styled from 'styled-components';\nimport BackgroundImage from '../../assets/homepage-bg.jpg'\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url(${BackgroundImage});\n  ${'' /* opacity: 0.7; */}\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  overflow: scroll;\n`;\n\nexport const TextWrapper = styled.div`\n   max-width: 650px;\n   color: black;\n   background-color: #cc5f03;\n   display: grid;\n   margin: 0 auto;\n   text-align: center;\n   ${'' /* padding: 60px; */}\n   border-radius: 5px;\n   opacity: 0.6;\n`;\n","// dev-dependencies imports\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\n// components imports\nimport Dragon from './Dragon';\nimport Generation from './Generation';\nimport AccountInfo from './AccountInfo';\nimport { logout } from '../actions/account';\n\n// styles imports\nimport { Container, TextWrapper } from './styles/HomeStyles';\nimport '.././index.css';\n\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"hero-wrapper\">\n      <Container>\n         <Button onClick={this.props.logout} className='logout-button'>LOG OUT</Button>\n          <Link to='/'>HOME</Link>\n          <Link to='/account-dragons'>LOUNGE</Link>\n          <Link to='/public-dragons'>ECONOMY</Link>\n           <AccountInfo />\n        <TextWrapper>\n          <h3>City Population Tracker</h3>\n          <br />\n          <Generation />\n          <Dragon />\n        </TextWrapper>\n      </Container> \n      </div>\n    );\n  }\n};\n\nexport default connect(null, { logout })(Home);\n","\nimport styled from 'styled-components';\nimport BackgroundImage from '../../assets/bg-wrapper.jpg';\n\nexport const Container = styled.div`\n  width: 100%;\n  background-image: url(${BackgroundImage});\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-top: 280px;\n  height: 100vh;\n  ${'' /* opacity: 0.7; */}\n`;\n\nexport const FormWrapper = styled.div`\n   max-width: 650px;\n   background-color: #cc5f03;\n   display: grid;\n   margin: -25px auto;\n   text-align: center;\n   padding: 20px;\n   border-radius: 10px;\n   opacity: 0.7;\n`;\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, FormGroup, FormControl } from 'react-bootstrap';\n\n// Component Imports:\nimport { signup, login } from '../actions/account';\nimport fetchStates from '../reducers/fetchStates';\n\n// Style Imports\nimport { Container, FormWrapper } from './styles/AuthFormStyles';\n// import './styles/responsive.css';\n// import '.././index.css';\n\n\nclass AuthForm extends Component {\n state = { username: '', password: '', buttonClicked: false };\n\n updateUsername = event => {\n   this.setState({ username: event.target.value })\n };\n\n updatePassword = event => {\n   this.setState({ password: event.target.value })\n };\n\n signup = () => {\n   this.setState({ buttonClicked: true });\n\n   const { username, password } = this.state;\n\n   this.props.signup({ username, password });\n };\n\n login = () => {\n  this.setState({ buttonClicked: true });\n\n   const { username, password } = this.state;\n\n   this.props.login({ username, password });\n};\n\nget Error() {\n  if (\n      this.state.buttonClicked &&\n      this.props.account.status === fetchStates.error\n    ) {\n     return <div>{ this.props.account.message }</div>\n  };\n};\n\n  render() {\n    return (\n    <Container className=\"container\">\n      <FormWrapper>\n       <h2>Dragon Vale City</h2>\n       <br />\n        <FormGroup>\n          <FormControl \n            type='text' \n            value={ this.state.username }\n            placeholder='Username'\n            onChange={ this.updateUsername }\n          />\n        </FormGroup>\n        <FormGroup>\n          <FormControl \n            type='password'\n            value={ this.state.password }\n            placeholder='Password'\n            onChange={ this.updatePassword }\n          />\n        </FormGroup>\n        <br />\n        <div>\n          <Button onClick={ this.login }>Log In</Button>\n          <span>   or   </span>\n          <Button onClick={ this.signup }>Sign Up</Button>\n          <br />\n          <br />\n        </div>\n        { this.Error }\n        </FormWrapper>\n     </Container>\n    );\n  };\n};\n\nexport default connect(\n  ({ account }) => ({ account }), \n  { signup, login })(AuthForm);\n","\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Home from './Home';\nimport AuthForm from './AuthForm';\n\nclass Root extends Component {\n render() {\n  return (\n    this.props.account.loggedIn ? <Home /> : <AuthForm />\n  )\n }\n}\n\nexport default connect(\n  ({ account }) => ({ account }),\n  null)(Root);\n","\nimport { ACCOUNT_DRAGONS } from './types';\nimport { fetchFromAccount } from './account';\n\nexport const fetchAccountDragons = () => fetchFromAccount({\n  endpoint: 'dragons',\n  options: { credentials: 'include' },\n  FETCH_TYPE: ACCOUNT_DRAGONS.FETCH,\n  ERROR_TYPE: ACCOUNT_DRAGONS.FETCH_ERROR,\n  SUCCESS_TYPE: ACCOUNT_DRAGONS.FETCH_SUCCESS\n});","\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\nimport DragonAvatar from './DragonAvatar';\nimport { BACKEND } from '../config';\n\nclass AccountDragonRow extends Component {\n  state = {\n    nickname: this.props.dragon.nickname,\n    isPublic: this.props.dragon.isPublic,\n    saleValue: this.props.dragon.saleValue,\n    sireValue: this.props.dragon.sireValue,\n    edit: false\n    // delete: false\n  };\n\n  updateNickname = event => {\n    this.setState({ nickname: event.target.value });\n  };\n\n  updateSaleValue = event => {\n    this.setState({ saleValue: event.target.value })\n  };\n\n  updateSireValue = event => {\n    this.setState({ sireValue: event.target.value })\n  };\n\n  updateIsPublic = event => {\n    this.setState({ isPublic: event.target.checked })\n  };\n\n  // deleteNickname = event => {\n  //   this.setState({ nickname: event.target.value })\n  // };\n\n  toogleEdit = () => {\n    this.setState({ edit: !this.state.edit });\n  };\n\n  // toogleDelete = () => {\n  //   this.setState({ delete: !this.state.delete });\n  // };\n\n  save = () => {\n    fetch(`${BACKEND.ADDRESS}/dragon/update`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        dragonId: this.props.dragon.dragonId,\n        nickname: this.state.nickname,\n        isPublic: this.state.isPublic,\n        saleValue: this.state.saleValue,\n        sireValue: this.state.sireValue\n      })\n    }).then(response => response.json())\n      .then(json => {\n        if (json.type === 'error') {\n          alert(json.message);\n        } else {\n          this.toogleEdit();\n        }\n     })\n     .catch(error => alert(error.message));\n  };\n\n  get SaveButton() {\n    return <Button onClick={this.save}>Save</Button>;\n  };\n\n  get EditButton() {\n    return <Button onClick={this.toogleEdit}>Edit</Button>;\n  };\n\n  // get DeleteButton() {\n  //   return <Button onClick={this.toogleDelete}>Delete</Button>\n  // };\n\n\n render() {\n    return (\n      <div>\n        <input\n          type='text'\n          value={this.state.nickname}\n          onChange={this.updateNickname}\n          disabled={!this.state.edit}\n        />\n        <br />\n        <DragonAvatar dragon={this.props.dragon} />\n        <div>\n          <span>\n            Sale Value: {' '}\n            <input\n              type='number'\n              disabled={!this.state.edit}\n              value={this.state.saleValue}\n              onChange={this.updateSaleValue}\n              className='accounr-dragon-row-input'\n            />\n          </span>{' '}\n          <span>\n            sireValue:{' '}\n            <input\n              type='number'\n              disabled={!this.state.edit}\n              value={this.state.sireValue}\n              onChange={this.updateSireValue}\n              className='accounr-dragon-row-input'\n            />\n          </span>\n          <span>\n            Public:{' '}\n            <input\n              type='checkbox'\n              disabled={!this.state.edit}\n              checked={this.state.isPublic}\n              onChange={this.updateIsPublic}\n            />\n          </span>\n          {\n            this.state.edit ? this.SaveButton : this.EditButton\n          }\n        </div>\n      </div>\n    )\n  }\n};\n\n // {\n        //   this.state.delete ? this.SaveButton : this.DeleteButton\n        // }\n\n          // onChange={this.deleteNickname}\n\nexport default AccountDragonRow;\n","\nimport styled from 'styled-components';\n// import BackgroundImage from '../../assets/lounge-bg.png';\nimport BackgroundImage from '../../assets/lounge2-bg.jpg';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url(${BackgroundImage});\n  ${'' /* opacity: 0.7; */}\n  background-color: #cccccc;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  overflow: scroll;\n`;\n\nexport const TextWrapper = styled.div`\n   max-width: 650px;\n   color: black;\n   background-color: #cc5f03;\n   display: grid;\n   margin: 0 auto;\n   text-align: center;\n   ${'' /* padding: 60px; */}\n   border-radius: 5px;\n   opacity: .6;\n`;\n","\n// Dev-dependencies imports\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\n// Components imports\nimport { logout } from '../actions/account';\nimport { fetchAccountDragons } from '../actions/accountDragons';\nimport AccountDragonRow from './AccountDragonRow';\nimport AccountInfo from './AccountInfo';\n\n// style imports\nimport { Container, TextWrapper } from './styles/AcctDragonStyles';\n\n\nclass AccountDragons extends Component {\n componentDidMount() {\n  this.props.fetchAccountDragons();\n };\n\n render() {\n  return (\n      <Container>\n        <Button onClick={this.props.logout} className='logout-button'>\n            LOG OUT\n          </Button>\n          <Link to='/'>HOME</Link>\n          <Link to='/account-dragons'>LOUNGE</Link>\n          <Link to='/public-dragons'>ECONOMY</Link>\n      <AccountInfo />\n      <TextWrapper>\n        <h3>My Dragons Lounge</h3>\n        <br />\n        <br />\n        <br />\n        {\n          this.props.accountDragons.dragons.map(dragon => {\n            return (\n              <div key={dragon.dragonId}>\n                <AccountDragonRow dragon={dragon} />\n                <br />\n                <br />\n                <br />\n              </div>\n            )\n          })\n        }\n      </TextWrapper>\n      </Container>\n  )\n }\n};\n\nexport default connect(\n  ({ accountDragons }) => ({ accountDragons }),\n  { fetchAccountDragons, logout }\n)(AccountDragons);\n","\nimport { PUBLIC_DRAGONS } from './types';\nimport { BACKEND } from '../config';\n\nexport const fetchPublicDragons = () => dispatch => {\n  dispatch({ type: PUBLIC_DRAGONS.FETCH });\n\n  return fetch(`${BACKEND.ADDRESS}/dragon/public-dragons`)\n    .then(response => response.json())\n    .then(json => {\n      if (json.type === 'error') {\n        dispatch({ type: PUBLIC_DRAGONS.FETCH_ERROR, message: json.message });\n      } else {\n        dispatch({ type: PUBLIC_DRAGONS.FETCH_SUCCESS, dragons: json.dragons });\n      };\n    })\n    .catch(error => dispatch({ type: PUBLIC_DRAGONS.FETCH_ERROR, message: error.message }));\n};\n","\n// Dev-dependencies imports\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap';\n\n// Component imports\nimport { BACKEND }  from '../config';\nimport history from '../history';\n\nclass MatingOptions extends Component {\n mate = ({ matronDragonId, patronDragonId }) => () => {\n  fetch(`${BACKEND.ADDRESS}/dragon/mate`, {\n   method: 'POST',\n   credentials: 'include',\n   headers: { 'Content-Type': 'application/json' },\n   body: JSON.stringify({ matronDragonId, patronDragonId })\n  })\n  .then(response => response.json())\n  .then(json => {\n   alert(json.message);\n\n   if(json.type !== 'error') {\n    history.push('/account-dragons');\n    }\n  })\n  .catch(error => alert(error.message));\n}\n\n\n render() {\n  return (\n   <div>\n    <h4>Pick one of your dragons to make a dragon baby</h4>\n    {\n     this.props.accountDragons.dragons.map(dragon => {\n      const { dragonId, generationId, nickname } = dragon;\n\n      return (\n       <span key={dragonId}>\n        <Button onClick={\n         this.mate({\n          patronDragonId: this.props.patronDragonId,\n          matronDragonId: dragon.dragonId\n         })\n        }>\n         Gen{generationId}.Id{dragonId}. {nickname}\n        </Button>\n        {' '}\n       </span>\n      )\n     })\n    }\n   </div>\n  )\n }\n}\n\nexport default connect(\n  ({ accountDragons }) => ({ accountDragons }),\n  null\n)(MatingOptions);\n","// dev dependencies imports\nimport React, { Component } from 'react';\nimport { Button } from 'react-bootstrap';\n\n// component imports\nimport DragonAvatar from './DragonAvatar';\nimport MatingOptions from './MationgOptions'\nimport { BACKEND } from '../config';\nimport history from '../history';\n\n\nclass PublicDragonRow extends Component {\n  state = { displayMatingOptions: false };\n\n  toogleDisplayMatingOptions = () => {\n    this.setState({\n      displayMatingOptions: !this.state.displayMatingOptions\n    });\n  }\n\n  buy = () => {\n    const { dragonId, saleValue } = this.props.dragon;\n\n    fetch(`${BACKEND.ADDRESS}/dragon/buy`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ dragonId, saleValue })\n    }).then(response => response.json())\n      .then(json => {\n        alert(json.message);\n\n        if (json.type !== 'error') {\n          history.push('/account-dragons');\n        }\n      })\n      .catch(error => alert(error.message));\n  }\n\n render() {\n  return (\n   <div>\n    <div>{this.props.dragon.nickname}</div>\n    <DragonAvatar dragon={this.props.dragon} />\n    <div>\n      <span>Sale Value: {this.props.dragon.saleValue}</span>{' | '}\n      <span>Sire Value: {this.props.dragon.sireValue}</span>\n    </div>\n    <br />\n    <Button onClick={this.buy}>Buy</Button>{' '}\n    <Button onClick={this.toogleDisplayMatingOptions}>Sire</Button>\n    <br />\n    {\n      this.state.displayMatingOptions ?\n        <MatingOptions patronDragonId={this.props.dragon.dragonId} /> :\n        <div></div>\n    }\n   </div>\n  )\n }\n};\n\nexport default PublicDragonRow;\n","\nimport styled from 'styled-components';\nimport BackgroundImage from '../../assets/economy-bg.jpg';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url(${BackgroundImage});\n  ${'' /* opacity: 0.7; */}\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  position: relative;\n  overflow: scroll;\n`;\n\nexport const TextWrapper = styled.div`\n   max-width: 650px;\n   color: black;\n   background-color: #cc5f03;\n   display: grid;\n   margin: 0 auto;\n   text-align: center;\n   ${'' /* padding: 60px; */}\n   border-radius: 5px;\n   opacity: .7;\n`;\n","\n// Dev-dependencie imports \nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\n// Component imports\nimport { fetchPublicDragons } from '../actions/publicDragons';\nimport { fetchAccountDragons } from '../actions/accountDragons';\nimport { logout } from '../actions/account';\nimport PublicDragonRow from './PublicDragonRow';\nimport AccountInfo from './AccountInfo';\n\n// style imports\nimport { Container, TextWrapper } from './styles/PubDragonStyles';\n\n\nclass PublicDragons extends Component {\n  componentDidMount() {\n    this.props.fetchPublicDragons();\n    this.props.fetchAccountDragons();\n  }\n\n  render() {\n    return (\n        <Container>\n          <Button onClick={this.props.logout} className='logout-button'>\n            LOG OUT\n          </Button>\n          <Link to='/'>HOME</Link>\n          <Link to='/account-dragons'>LOUNGE</Link>\n          <Link to='/public-dragons'>ECONOMY</Link>\n        <AccountInfo />\n        <TextWrapper>\n        <h3>City Economy</h3>\n        <br />\n        <br />\n        <br />\n          {\n            this.props.publicDragons.dragons.map(dragon => {\n              return (\n                <div key={dragon.dragonId}>\n                  <PublicDragonRow dragon={dragon} />\n                  <br />\n                  <br />\n                  <br />\n                </div>\n              )\n            })\n          }\n        </TextWrapper>\n        </Container>\n    )\n  }\n}\n\nexport default connect(\n  ({ publicDragons }) => ({ publicDragons }),\n  { fetchPublicDragons, fetchAccountDragons, logout }\n)(PublicDragons);","\n// imported dev-dependencies\nimport React from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { render } from 'react-dom';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\n// imported components\nimport history from './history';\nimport Root from './components/Root';\nimport AccountDragons from './components/AccountDragons';\nimport PublicDragons from './components/PublicDragons'\nimport { fetchAuthenticated } from './actions/account';\nimport { fetchPublicDragons } from './actions/publicDragons';\n\n// imported styled\nimport './index.css';\n\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  applyMiddleware(thunk)\n);\n\nstore.dispatch(fetchPublicDragons());\n\nconst AuthRoute = (props) => {\n  if (!store.getState().account.loggedIn) {\n    return <Redirect to={{ pathname: '/' }} />\n  }\n\n  const { component, path } = props;\n\n  return <Route path={path} component={component} />;\n};\n\nstore.dispatch(fetchAuthenticated())\n  .then(() => {\n    render (\n      <Provider store={store}>\n        <Router history={history}>\n          <Switch>\n            <Route exact path='/' component={Root} />\n            <AuthRoute path='/account-dragons' component={AccountDragons} />\n            <AuthRoute path='/public-dragons' component={PublicDragons} />\n          </Switch>\n        </Router>\n      </Provider>\n    ,document.getElementById('root')\n    );\n  });\n","module.exports = __webpack_public_path__ + \"static/media/skinny.c0d1f4ed.png\";","module.exports = __webpack_public_path__ + \"static/media/slender.65003ff1.png\";","module.exports = __webpack_public_path__ + \"static/media/sporty.fb06cabe.png\";","module.exports = __webpack_public_path__ + \"static/media/stocky.21206037.png\";","module.exports = __webpack_public_path__ + \"static/media/patchy.c5e6e73c.png\";","module.exports = __webpack_public_path__ + \"static/media/plain.1130ef57.png\";","module.exports = __webpack_public_path__ + \"static/media/spotted.494e01b6.png\";","module.exports = __webpack_public_path__ + \"static/media/striped.e2c74721.png\";","module.exports = __webpack_public_path__ + \"static/media/homepage-bg.f823ddac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bg-wrapper.bbe723f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lounge2-bg.1de4f70c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/economy-bg.54d4d616.jpg\";"],"sourceRoot":""}